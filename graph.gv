digraph {

    // ------------------------------------------------------------------
    // GLOBAL SETTINGS

    rankdir=LR;
    graph [pad="1.5"]
    node [shape=circle fixedsize=true, height=3.5 fontsize=14];
    edge [fontsize=14 fontname="arial"]

    // ------------------------------------------------------------------
    // ACCEPT STATES
    {
        node [shape=doublecircle, style=filled]
        {
            node [fillcolor=darkgoldenrod1]
            ANCHOR_LINE;
        }
        {
            rank=same; 
            node [fillcolor=darkorange]
            ANCHOR_CHAR;
            ANCHOR_CHAR_SHORTCUT;
        }
        {
            node [fillcolor=firebrick3]
            ACTIVE_LINE;
        }
        {
            rank=same; 
            node [fillcolor=violetred3]
            ACTIVE_CHAR;
            ACTIVE_CHAR_SHORTCUT;
        }
    }


    // ------------------------------------------------------------------
    // TRANSIENT ARROW INTO FINITE AUTOMATION

    {
        INCOMING [style=invisible, height=0]
        INCOMING -> START
        [label=<<b>Start of finite automation</b>> style=dashed]
    }

    // ------------------------------------------------------------------
    // ANCHOR COORDINATE TRANSITIONS

    {
        edge [color=orange2, fontcolor=orange2];

        START -> ANCHOR_LINE_SIGN_PREFIX 
        [label=<ANCHOR_LINE_REL_POS<br/><b>Condition: +</b><br/>Set anchor line mode to 'Positive Relative'>];

        START -> ANCHOR_LINE_SIGN_PREFIX
        [label=<ANCHOR_LINE_REL_NEG<br/><b>Condition: -</b><br/>Set anchor line mode to 'Negative Relative'>];

    }

    {
        edge [color=orangered2, fontcolor=orangered2]

        START -> ANCHOR_LINE 
        [label=<ANCHOR_LINE_ABS<br/><b>Condition: [0 - 9]</b><br/>Set anchor line mode to 'Absolute',<br/>then append token to anchor line magnitude>];

        ANCHOR_LINE_SIGN_PREFIX -> ANCHOR_LINE
        [label=<ANCHOR_LINE_REL_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to anchor line magnitude>];

        ANCHOR_LINE -> ANCHOR_LINE
        [label=<ANCHOR_LINE_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to anchor line magnitude>];
    }

    {
        edge [color=orangered4, fontcolor=orangered4];

        START -> ANCHOR_COORDINATE_SEPARATOR
        [label=<ANCHOR_SEP_1<br/><b>Condition: ,</b>>];

        ANCHOR_LINE -> ANCHOR_COORDINATE_SEPARATOR 
        [label=<ANCHOR_SEP_2<br/><b>Condition: ,</b>>];
    }

    {
        edge [color=chartreuse3, fontcolor=chartreuse3];

        ANCHOR_COORDINATE_SEPARATOR -> ANCHOR_CHAR_SIGN_PREFIX
        [label=<ANCHOR_CHAR_REL_POS<br/><b>Condition: +</b><br/>Set anchor line mode to 'Positive Relative'>];

        ANCHOR_COORDINATE_SEPARATOR -> ANCHOR_CHAR_SIGN_PREFIX
        [label=<ANCHOR_CHAR_REL_NEG<br/><b>Condition: -</b><br/>Set anchor line mode to 'Negative Relative'>];
    }

    {
        edge [color=lightseagreen, fontcolor=lightseagreen]
        
        ANCHOR_COORDINATE_SEPARATOR -> ANCHOR_CHAR
        [label=<ANCHOR_CHAR_ABS<br/><b>Condition: [0 - 9]</b><br/>Set anchor character mode to 'Absolute',<br/>then append token to anchor character magnitude>];

        ANCHOR_CHAR_SIGN_PREFIX -> ANCHOR_CHAR 
        [label=<ANCHOR_CHAR_REL_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to anchor character magnitude>];

        ANCHOR_CHAR -> ANCHOR_CHAR
        [label=<ANCHOR_CHAR_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to anchor character magnitude>];
    }
    
    {
        edge [color=hotpink2, fontcolor=hotpink2];

        ANCHOR_LINE -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_2A<br/><b>Condition: h</b><br/>Set anchor character to 'First Non-Whitespace Character in Line'>];

        ANCHOR_LINE -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_2B<br/><b>Condition: l</b><br/>Set anchor character to 'One Past Last Non-Whitespace Character in Line'>];

        ANCHOR_LINE -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_2C<br/><b>Condition: H</b><br/>Set anchor character to 'Start of Line'>];

        ANCHOR_LINE -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_2D<br/><b>Condition: L</b><br/>Set anchor character to 'End of Line'>];
    }

    {
        edge [color=hotpink4, fontcolor=hotpink4];

        START -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_1A<br/><b>Condition: h</b><br/>Set anchor character to 'First Non-Whitespace Character in Line'>];

        START -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_1B<br/><b>Condition: l</b><br/>Set anchor character to 'One Past Last Non-Whitespace Character in Line'>];

        START -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_1C<br/><b>Condition: H</b><br/>Set anchor character to 'Start of Line'>];

        START -> ANCHOR_CHAR_SHORTCUT 
        [label=<ANCHOR_SHORT_1D<br/><b>Condition: L</b><br/>Set anchor character to 'End of Line'>];

    }

    {
        edge [color=darkolivegreen4, fontcolor=darkolivegreen4];

        START -> ACTIVE_START
        [label=<SELECT_FROM_CURSOR_QUICK_SEP<br/><b>Condition: ;</b><br/>Set selection mode to 'Quick Select From Cursor'>];

        START -> ACTIVE_START
        [label=<SELECT_FROM_CURSOR_SEP<br/><b>Condition: :</b><br/>Set selection mode to 'Select From Cursor'>];
    }

    {
        edge [color=dodgerblue3, fontcolor=dodgerblue3];

        ANCHOR_LINE -> ACTIVE_START
        [label=<SELECT_SEP_1<br/><b>Condition: :</b><br/>Set selection mode to 'Select'>];

        ANCHOR_LINE -> ACTIVE_START
        [label=<SELECT_QUICK_SEP_1<br/><b>Condition: ;</b><br/>Set selection mode to 'Quick Select'>];

    }

    {
        edge [color=forestgreen, fontcolor=forestgreen];

        ANCHOR_CHAR -> ACTIVE_START
        [label=<SELECT_SEP_2<br/><b>Condition: :</b><br/>Set selection mode to 'Select'>];

        ANCHOR_CHAR -> ACTIVE_START
        [label=<SELECT_QUICK_SEP_2<br/><b>Condition: ;</b><br/>Set selection mode to 'Quick Select'>];

    }

    {
        edge [color=mediumblue, fontcolor=mediumblue];

        ANCHOR_CHAR_SHORTCUT -> ACTIVE_START
        [label=<SELECT_SEP_3<br/><b>Condition: :</b><br/>Set selection mode to 'Select'>];

        ANCHOR_CHAR_SHORTCUT -> ACTIVE_START
        [label=<SELECT_QUICK_SEP_3<br/><b>Condition: ;</b><br/>Set selection mode to 'Quick Select'>];
    }

    // ------------------------------------------------------------------
    // ACTIVE COORDINATE TRANSITIONS

    {
        edge [color=salmon1, fontcolor=salmon1];

        ACTIVE_START -> ACTIVE_LINE_SIGN_PREFIX 
        [label=<ACTIVE_LINE_REL_POS<br/><b>Condition: +</b><br/>Set active line mode to 'Positive Relative'>];

        ACTIVE_START -> ACTIVE_LINE_SIGN_PREFIX
        [label=<ACTIVE_LINE_REL_NEG<br/><b>Condition: -</b><br/>Set active line mode to 'Negative Relative'>];

    }

    {
        edge [color=crimson, fontcolor=crimson]

        ACTIVE_START -> ACTIVE_LINE 
        [label=<ACTIVE_LINE_ABS<br/><b>Condition: [0 - 9]</b><br/>Set active line mode to 'Absolute',<br/>then append token to active line magnitude>];

        ACTIVE_LINE_SIGN_PREFIX -> ACTIVE_LINE
        [label=<ACTIVE_LINE_REL_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to active line magnitude>];

        ACTIVE_LINE -> ACTIVE_LINE
        [label=<ACTIVE_LINE_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to active line magnitude>];
    }

    {
        edge [color=mediumvioletred, fontcolor=mediumvioletred];

        ACTIVE_START -> ACTIVE_COORDINATE_SEPARATOR
        [label=<ACTIVE_SEP_1<br/><b>Condition: ,</b>>];

        ACTIVE_LINE -> ACTIVE_COORDINATE_SEPARATOR 
        [label=<ACTIVE_SEP_2<br/><b>Condition: ,</b>>];
    }

    {
        edge [color=turquoise3, fontcolor=turquoise3];

        ACTIVE_COORDINATE_SEPARATOR -> ACTIVE_CHAR_SIGN_PREFIX
        [label=<ACTIVE_CHAR_REL_POS<br/><b>Condition: +</b><br/>Set active line mode to 'Positive Relative'>];

        ACTIVE_COORDINATE_SEPARATOR -> ACTIVE_CHAR_SIGN_PREFIX
        [label=<ACTIVE_CHAR_REL_NEG<br/><b>Condition: -</b><br/>Set active line mode to 'Negative Relative'>];

    }

    {
        edge [color=royalblue3, fontcolor=royalblue3];

        ACTIVE_COORDINATE_SEPARATOR -> ACTIVE_CHAR
        [label=<ACTIVE_CHAR_ABS<br/><b>Condition: [0 - 9]</b><br/>Set active character mode to 'Absolute',<br/>then append token to active character magnitude>];

        ACTIVE_CHAR_SIGN_PREFIX -> ACTIVE_CHAR 
        [label=<ACTIVE_CHAR_REL_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to active character magnitude>];

        ACTIVE_CHAR -> ACTIVE_CHAR
        [label=<ACTIVE_CHAR_MAG<br/><b>Condition: [0 - 9]</b><br/>Append token to active character magnitude>];
    }
    
    {
        edge [color=aquamarine4, fontcolor=aquamarine4];

        ACTIVE_START -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_1A<br/><b>Condition: h</b><br/>Set active character to 'First Non-Whitespace Character in Line'>];

        ACTIVE_START -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_1B<br/><b>Condition: l</b><br/>Set active character to 'One Past Last Non-Whitespace Character in Line'>];

        ACTIVE_START -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_1C<br/><b>Condition: H</b><br/>Set active character to 'Start of Line'>];

        ACTIVE_START -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_1D<br/><b>Condition: L</b><br/>Set active character to 'End of Line'>];

    }

    {
        edge [color=green4, fontcolor=green4];

        ACTIVE_LINE -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_2A<br/><b>Condition: h</b><br/>Set active character to 'First Non-Whitespace Character in Line'>];

        ACTIVE_LINE -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_2B<br/><b>Condition: l</b><br/>Set active character to 'One Past Last Non-Whitespace Character in Line'>];

        ACTIVE_LINE -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_2C<br/><b>Condition: H</b><br/>Set active character to 'Start of Line'>];

        ACTIVE_LINE -> ACTIVE_CHAR_SHORTCUT 
        [label=<ACTIVE_SHORT_2D<br/><b>Condition: L</b><br/>Set active character to 'End of Line'>];
    }

}